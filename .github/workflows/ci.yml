name: CI/CD Pipeline for Microservices

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user-enrolment-service, course-service, stripe-service,
                  monitoring-service, api-gateway, discovery-server]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven - ${{ matrix.service }}
        run: mvn clean package --file micro-services/${{ matrix.service }}/pom.xml

      - name: Run Tests - ${{ matrix.service }}
        run: mvn test --file micro-services/${{ matrix.service }}/pom.xml

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image - ${{ matrix.service }}
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest micro-services/${{ matrix.service }}

      - name: Push Docker Image - ${{ matrix.service }}
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest

  infra-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    env:
      AWS_REGION: ap-south-1
      CLUSTER_NAME: free-tier-cluster

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform-eks
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform-eks
        run: terraform apply -auto-approve

      - name: Update kubeconfig
        run: aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Deploy via Helm
        run: |
          helm upgrade --install discovery-server ./helm/discovery-server
          helm upgrade --install api-gateway ./helm/api-gateway
          helm upgrade --install user-enrolment ./helm/user-enrolment-service
